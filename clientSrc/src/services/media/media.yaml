openapi: "3.0.3"
info:
  version: 1.0.0
  title: Media Service API
  description: Store, retrieve and delete media binary and meta data. See the Query Service for querying and updating media metadata.
  license:
    name: Example Boilerplate, Inc.
servers:
  - url: 'https://ExampleBoilerplate.com/'
paths:
  /m:
    post:
      summary: Uploads binary data. Inserts a new media and metadata record or updates existing records based on UUID.
      operationId: postMedia
      requestBody:
        description: Provide multipart data; UUID, binary data and data type
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: Unique ID of this media. Leave blank to insert a new record and return the generated UUID.
                generatehash:
                  type: boolean
                source:
                  type: string
                  format: binary
                  description: Binary source
                mediatype:
                  type: string
                  description: Content-Type
                jsonData:
                  type: object
                  additionalProperties: true
                  format: json
                  description: Raw json associated with the media object
      tags:
        - media
      responses:
        '200':
          description: Existing media data updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSuccess'
        '201':
          description: New media saved and is now available for retrieval.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSuccess'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        default:
          description: Unspecified error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /m/{id}:
    get:
      summary: Retrieve media binary data
      operationId: getMediaDataById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the media data to retrieve
          schema:
            type: string
            format: uuid
      tags:
        - media
      responses:
        200:
          description: Media binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    head:
      summary: Retrieve media via HEAD request. Reply for this request only includes headers and no body or payload is sent. Used for retrieving binary details (file size, type, etc.)
      operationId: headMediaDataById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the media data to retrieve
          schema:
            type: string
            format: uuid
      tags:
        - media
      responses:
        200:
          description: Media binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete media (binary and metadata)
      operationId: deleteMediaById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the media and metadata to delete
          schema:
            type: string
            format: uuid
      tags:
        - media
      responses:
        200:
          description: Metadata of deleted media.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaMetadata'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /m/{id}/data:
    get:
      summary: Retrieve media metadata
      operationId: getMediaMetadataById
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the media metadata to retrieve
          schema:
            type: string
            format: uuid
      tags:
        - media
      responses:
        200:
          description: Media metadata as JSON in the body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaMetadata'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    MediaMetadata:
      type: object
      required:
        - id
        - path
        - type
        - extension
      properties:
        id:
          type: string
          format: uuid
        path:
          type: string
        type:
          type: string
        extension:
          type: string
        hashcode:
          type: string
        length:
          type: number
          format: long
        jsonData:
          type: object
          additionalProperties: true
          format: json
          description: Raw json associated with the media object
        created_at:
          type: string
          format: date-time
          description: |
            Date/time the media record was first created. Strictly controlled by the db... supplied values will be ignored.
        updated_at:
          type: string
          format: date-time
          description: |
            Date/time the media record was last updated. Strictly controlled by the db... supplied values will be ignored.
    MediaSuccess:
      type: object
      required:
        - result
      properties:
        result:
          type: string
          enum:
            - OK
            - WARN
            - ERROR
        hashcode:
          type: string